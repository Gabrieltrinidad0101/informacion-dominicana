services:
  download_links:
    build: 
      context: .  
      dockerfile: ./projects/downloadLinks/dockerfile
    container_name: downloadLinks
    volumes:
      - ./projects/downloadLinks:/app/projects/downloadLinks
      - /app/node_modules
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq

  download:
    build:
      context: .
      dockerfile: ./projects/download/dockerfile
    container_name: download
    volumes:
      - ./projects/download:/app/projects/download
      - /app/node_modules
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  events:
    build:
      context: .
      dockerfile: ./projects/events/dockerfile
    container_name: events
    volumes:
      - ./projects/events:/app/projects/events
      -  /app/events/node_modules
    networks:
      - dev
    ports:
      - 3001:3001
    depends_on: 
      - mongo
      - rabbitmq
  frontend:
    build: ./projects/frontend
    container_name: frontend
    volumes:
      - ./projects/frontend:/app
      - ./projects/frontend/node_modules:/app/projects/node_modules
    networks:
      - dev
    ports:
      - 3000:3000
  post_download:
    build: 
      context: .
      dockerfile: ./projects/postDownload/dockerfile
    container_name: postDownload
    volumes:
      - ./projects/postDownload:/app/projects/postDownload
      -  /app/postDownload/node_modules
      -  /node_modules
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq

  extracted_text:
    build:
      context: .
      dockerfile: ./projects/extractedText/dockerfile
    container_name: extractedText
    volumes:
      - ./projects/extractedText:/app/projects/extractedText
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  analyze_extracted_text:
    build:
      context: .
      dockerfile: ./projects/analyzeExtractedText/dockerfile
    container_name: analyzeExtractedText
    volumes:
      - ./projects/analyzeExtractedText:/app/projects/analyzeExtractedText
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  ai_text_analyze:
    build:
      context: .
      dockerfile: ./projects/aiTextAnalyze/dockerfile
    container_name: aiTextAnalyze
    volumes:
      - ./projects/aiTextAnalyze:/app/projects/aiTextAnalyze
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  insert_data:
    build: 
      context: .
      dockerfile: ./projects/insertData/dockerfile
    container_name: insertData
    volumes:
      - ./projects/insertData:/app/projects/insertData
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  files_manager:
    build: 
      context: .
      dockerfile: ./projects/filesManager/dockerfile
    container_name: filesManager
    volumes:
      - ./projects/filesManager:/app/projects/filesManager
      - ./data:/app/data
    networks:
      - dev
    ports:  
      - 4000:4000
  export_to_json:
    build: 
      context: .
      dockerfile: ./projects/exportToJson/dockerfile
    container_name: exportToJson
    volumes:
      - ./projects/exportToJson:/app/projects/exportToJson
      -  /app/exportToJson/node_modules
    networks:
      - dev
    depends_on:
      - files_manager
      - mongo
      - rabbitmq
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./volumes/rabbitmq/data:/var/lib/rabbitmq
      - ./volumes/rabbitmq/logs:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin  
    networks:
      - dev
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./volumes/mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root  
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - dev
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - dev

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
    networks:
      - dev

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "5000:3000"
    networks:
      - dev

networks:
  dev:
    driver: bridge