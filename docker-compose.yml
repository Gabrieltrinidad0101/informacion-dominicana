services:
  download_links:
    build: 
      context: .  
      dockerfile: ./projects/downloadLinks/dockerfile
    container_name: downloadLinks
    volumes:
      - ./projects/downloadLinks:/app/downloadLinks
    networks:
      - dev
  download:
    build:
      context: .
      dockerfile: ./projects/download/dockerfile
    container_name: download
    volumes:
      - /app/node_modules
    networks:
      - dev
  events:
    build:
      context: .
      dockerfile: ./projects/events/dockerfile
    container_name: events
    volumes:
      - ./projects/events:/app/events
      -  /app/events/node_modules
    networks:
      - dev
    ports:
      - 3001:3001
  frontend:
    build: ./projects/frontend
    container_name: frontend
    volumes:
      - ./projects/frontend:/app
      - ./projects/frontend/node_modules:/app/node_modules
    networks:
      - dev
    ports:
      - 3000:3000
  post_download:
    build: 
      context: .
      dockerfile: ./projects/postDownload/dockerfile
    container_name: postDownload
    volumes:
      - ./projects/postDownload:/app/postDownload
      -  /app/postDownload/node_modules
      -  /node_modules
    networks:
      - dev
  extractedText:
    build:
      context: .
      dockerfile: ./projects/extractedText/dockerfile
    container_name: extractedText
    volumes:
      - ./projects/extractedText:/app
    networks:
      - dev
  analyzeExtractedText:
    build:
      context: .
      dockerfile: ./projects/analyzeExtractedText/dockerfile
    container_name: analyzeExtractedText
    volumes:
      - ./projects/analyzeExtractedText:/app
    networks:
      - dev
  textAnalysisAI:
    build:
      context: .
      dockerfile: ./projects/aiTextAnalyze/dockerfile
    container_name: textAnalysisAI
    volumes:
      - ./projects/aiTextAnalyze:/app
    networks:
      - dev
  insertData:
    build: 
      context: .
      dockerfile: ./projects/insertData/dockerfile
    container_name: insertData
    volumes:
      - ./projects/insertData:/app
    networks:
      - dev
  filesManager:
    build: 
      context: .
      dockerfile: ./projects/fileManagerClient/dockerfile
    container_name: filesManager
    volumes:
      - ./projects/fileManagerClient:/app/fileManagerClient
      - ./data:/app/data
    networks:
      - dev
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./volumes/rabbitmq/data:/var/lib/rabbitmq
      - ./volumes/rabbitmq/logs:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin  
    networks:
      - dev
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./volumes/mongo/data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root  
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - dev

networks:
  dev:
    driver: bridge